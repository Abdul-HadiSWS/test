@model LearningPortal.Models.SectionMedia
@{
    ViewBag.Title = "StudentCourseVideo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<style>

    #controls {
        padding: 0;
        background-color: black;
    }

        #controls a {
            text-decoration: none;
        }

        #controls i {
            color: whitesmoke;
            font-size: 32px;
            padding: 8px;
            cursor: pointer;
        }

        #controls ul {
            list-style: none;
            margin: 0;
            padding: 0;
        }

    #next,
    #prev {
        display: inline;
    }
</style>
<div class="mdk-drawer-layout__content page ">

    <div class="container-fluid page__container">
        <ol class="breadcrumb">



            <li class="breadcrumb-item"><a href="@Url.Action("StudentCourse", "Home", new { id = @Html.DisplayFor(model => model.Section.Courses.CourseId) })">@Html.DisplayFor(model => model.Section.Courses.CourseName)</a></li>
            <li class="breadcrumb-item active"><a href="#">@Html.DisplayFor(model => model.Section.SectionName)</a></li>
            <li class="breadcrumb-item active">@Html.DisplayFor(model => model.VideoTitle)</li>
        </ol>
        <h1 class="h2">@Html.DisplayFor(model => model.Section.SectionName)</h1>
        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="embed-responsive embed-responsive-16by9">
                        @{ int start = ViewBag.StartTime;}

                        @Html.Hidden("currenttime1", start)
                        <iframe id="player" class="embed-responsive-item"
                                @{ string a = "https://www.youtube-nocookie.com/embed/" + Html.DisplayFor(model => model.VideoUrl) + "?&&modestbranding=1&&rel=0&&enablejsapi=1"; }
                                src="@a"
                                allowfullscreen=""></iframe>
                    </div>

                    <div id="controls" class="text-center">

                        <ul>
                            <li>
                                @{
                                    var playlist = ViewBag.playlist;
                                    var len = ViewBag.playlist.Count;
                                    var index = ViewBag.index;


                                    if ((index - 1) == -1)
                                    {


                                        <a href="#" style="pointer-events: none">
                                            <i id="prev" class="material-icons" style="color: gray;">fast_rewind</i>
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("StudentCourseVideo", "Home", new { Id = playlist[index-1] })">
                                            <i id="prev" class="material-icons" style="color: white;">fast_rewind</i>
                                        </a>

                                    }




                                    if ((index + 1) > len)
                                    {

                                        <a href="#" style="pointer-events: none" style="pointer-events: none">
                                            <i id="next" class="material-icons" style="color: gray;">fast_forward</i>
                                        </a>


                                    }
                                    else
                                    {


                                        if (index == (len - 1))
                                        {
                                            <a href="#" style="pointer-events: none" style="pointer-events: none">
                                                <i id="next" class="material-icons" style="color: gray;">fast_forward</i>
                                            </a>
                                        }
                                        else
                                        {
                                            <a href="@Url.Action("StudentCourseVideo", "Home", new { Id = playlist[index+1] })">
                                                <i id="next" class="material-icons" style="color: white;">fast_forward</i>
                                            </a>
                                        }





                                    }


                                }
                            </li>


                        </ul>

                    </div>



                    @Html.HiddenFor(model => model.SectionMediaId)
                </div>

                <div class="sidebar">

                    <div class="card">
                        <ul class="list-group list-group-fit">
                            <li class="list-group-item">
                                <div class="media align-items-center">
                                    <div class="media-left">
                                        <i class="material-icons text-muted-light">assessment</i>
                                    </div>
                                    <div class="media-body">
                                        Level:

                                        @{
                                            if (Html.DisplayFor(model => model.Section.Courses.Levels).ToString() == "Easy")
                                            {
                                            <span class="badge badge-primary ">@Html.DisplayFor(model => model.Section.Courses.Levels)</span>
                                            }
                                            else if (Html.DisplayFor(model => model.Section.Courses.Levels).ToString() == "Medium")
                                            {
                                             <span class="badge badge-warning ">@Html.DisplayFor(model => model.Section.Courses.Levels)</span>
                                            }
                                            else if (Html.DisplayFor(model => model.Section.Courses.Levels).ToString() == "Hard")
                                            {
                                             <span class="badge badge-danger ">@Html.DisplayFor(model => model.Section.Courses.Levels)</span>
                                            }
                                        }
                                    </div>
                                </div>
                            </li>
                            <li class="list-group-item">
                                <div class="media align-items-center">
                                    <div class="media-left">
                                        <i class="material-icons text-muted-light">schedule</i>
                                    </div>
                                    <div class="media-body">
                                        <div id="totalDuration">Duration: @{Html.RenderAction("FormatTime", "Home", new { time = Convert.ToInt32(Html.DisplayFor(model => model.VideoDuration).ToString())});} </div>
                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>

                </div>
            </div>
            <div class="col-md-4">

                <p>
                    @Html.Hidden("currenttime")

                </p>
            </div>
        </div>

    </div>




    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://www.youtube.com/iframe_api"></script>
    

    <script src="~/assets/js/duration.js"></script>
    <!--  playlist=VIDEOID_1,VIDEOID_2

        https://www.youtube.com/embed/tgbNymZ7vqY?playlist=tgbNymZ7vqY,B6vIXBQH0a0
        -->
